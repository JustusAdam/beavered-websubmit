[["alloc::vec::Vec::new"]]
marker = "safe_source"
on_return = true

# TODO: These annotations do not work due (for the Forge proeprty) to https://github.com/brownsys/paralegal/issues/114.
# [["lettre::Transport::send"]]
[["core::iter::traits::collect::IntoIterator::into_iter"]]
marker = "into_iter"
on_return = true

[["core::iter::traits::iterator::Iterator::next"]]
marker = "next"
on_return = true

# TODO: These annotations do not work due (for the Forge proeprty) to https://github.com/brownsys/paralegal/issues/114.
# [["std::sync::mutex::deref_mut::deref_mut"]]
# marker = "next"
# on_return = true

[["std::io::_print"]]
marker = "sink"
on_argument = [0]

[["alloc::vec::Vec::append"]]
marker = "not_safe_source"
on_return = true

[["alloc::vec::Vec::append"]]
marker = "not_safe_source"
on_argument = [0, 1]

# uncommenting the below code will allow dis-1-c to be caught but dis-2-a to fail.
# [["alloc::vec::Vec::push"]]
# marker = "not_safe_source"
# on_return = true

# [["alloc::vec::Vec::push"]]
# marker = "not_safe_source"
# on_argument = [0, 1]
